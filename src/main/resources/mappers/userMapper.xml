<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.happyhouse.user.model.dao.UserDao">

	<resultMap type="User" id="user">
		<result column="user_id" property="userId"/>
		<result column="user_name" property="userName"/>
		<result column="user_password" property="userPwd"/>
		<result column="email_id" property="emailId"/>
		<result column="email_domain" property="emailDomain"/>
		<result column="join_date" property="joinDate"/>
	</resultMap>

	<!-- 회원가입 -->
	<insert id="joinMember" parameterType="User">
		INSERT INTO members (user_id, user_name, user_password, email_id, email_domain, join_date)
		VALUES (#{userId}, #{userName}, #{userPwd}, #{emailId}, #{emailDomain}, now())
	</insert>
	
	<!-- 회원 로그인 -->
	<select id="loginMember" parameterType="map" resultMap="user">
		SELECT user_id, user_name, user_password, email_id, email_domain, join_date
		FROM members
		WHERE user_id = #{userId} and user_password = #{userPwd}
	</select>
	
	<!-- 회원 아이디로 조회 -->
	<select id="searchById" parameterType="String" resultMap="user">
		SELECT user_id,user_name, user_password, email_id, email_domain, join_date
		FROM members
		WHERE user_id = #{userId}
	</select>
	
	<!-- 회원 정보 수정 -->
	<update id="modifyMember" parameterType="User">
		UPDATE members
		SET user_name = #{userName}, user_password = #{userPwd}, email_id = #{emailId}, email_domain = #{emailDomain} 
		WHERE user_id = #{userId}
	</update>
	
	<delete id="deleteMember" parameterType="String">
		DELETE FROM members
		WHERE user_id = #{userId}
	</delete>
		
	<!-- 모든 회원 조회 -->
	<select id="selectAll" resultType="User">
		SELECT user_id,user_name,user_password,email_id,email_domain,join_date
		FROM members
	</select>
	
	<!-- 사용자 이름으로 검색하여 조회한다. id는 dao클래스의 메소드 이름과 일치시킨다. -->
<!-- 	<select id="searchByName" parameterType="String" resultMap="User"> -->
<!-- 		select id, password, name, email, age, img -->
<!-- 		from users -->
<!-- 		where name = #{name} -->
<!-- 	</select> -->
	
<!-- 	<select id="searchByCondition" parameterType="SearchCondition" resultType="User"> -->
<!-- 		SELECT id, password, name, email, age, img  -->
<!-- 		FROM users -->
<!-- 		<if test="word != null and word != ''"> -->
<!-- 			WHERE ${key} LIKE concat('%', #{word}, '%') -->
<!-- 		</if> -->
<!-- 		<if test='!orderBy.equals("none")'> -->
<!-- 			ORDER BY ${orderBy} ${orderByDir} -->
<!-- 		</if>  -->
<!-- 	</select> -->

	<!-- 회원 로그인 -->
	<select id="login" parameterType="User" resultMap="user">
		SELECT user_name, user_id, user_password, email_id, email_domain
		FROM members
		WHERE user_id = #{userId}
	</select>
	
	<select id="userInfo" parameterType="string" resultMap="user">
		SELECT user_name, user_id, user_password, email_id, email_domain, join_date
		FROM members
		WHERE user_id = #{userId}
	</select>
	
	<select id="getRefreshToken" parameterType="string" resultType="string">
		SELECT token
		FROM members
		WHERE user_id = #{userId}
	</select>
	
	<update id="saveRefreshToken" parameterType="map">
		UPDATE members
		SET token = #{token}
		WHERE user_id = #{userId}
	</update>
	
	<update id="deleteRefreshToken" parameterType="map">
		UPDATE members
		SET token = #{token, jdbcType=VARCHAR}
		WHERE user_id = #{userId}
	</update>
	
</mapper>